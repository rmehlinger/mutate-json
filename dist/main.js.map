{"version":3,"sources":["../src/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["let isNumber = require(\"lodash.isNumber\");\nlet deepUnset = require(\"lodash.unset\");\nlet deepSet = require(\"lodash.set\");\nlet deepGet = require(\"lodash.get\");\n\nfunction raiseMathOpError(opType, original) {\n  throw Error(`Invalid operation ${opType}; cannot apply to non-number ${original}.`);\n}\n\nfunction raiseArrayOpError(opType, original) {\n  throw Error(`Invalid operation ${opType}; cannot apply to non-array ${original}.`);\n}\n\nlet arrayOp = (original, target, operation, operand) => {\n    if(!Array.isArray(original)) {\n      raiseArrayOpError(operation, original);\n    }\n    original[operation](operand);\n};\n\nfunction add(original, target, path, operand) {\n    if (!isNumber(original)) {\n      raiseMathOpError('+', original);\n    }\n    deepSet(target, path, original + operand);\n}\n\nfunction subtract(original, target, path, operand) {\n  if (!isNumber(original)) {\n    raiseMathOpError('-', original);\n  }\n  deepSet(target, path, original - operand);\n}\n\nfunction multiply(original, target, path, operand) {\n  if (!isNumber(original)) {\n    raiseMathOpError('*', original);\n  }\n  deepSet(target, path, original * operand);\n}\n\nfunction divide(original, target, path, operand) {\n  if (!isNumber(original)) {\n    raiseMathOpError('/', original);\n  }\n  deepSet(target, path, original / operand);\n}\n\nfunction mod(original, target, path, operand) {\n  if (!isNumber(original)) {\n    raiseMathOpError('%', original);\n  }\n  deepSet(target, path, original % operand);\n}\n\nfunction pow(original, target, path, operand) {\n  if (!isNumber(original)) {\n    raiseMathOpError('**', original);\n  }\n  deepSet(target, path, original ** operand);\n}\n\nfunction increment(original, target, path) {\n  if (!isNumber(original)) {\n    raiseMathOpError('++', original);\n  }\n  deepSet(target, path, original + 1);\n}\n\nfunction decrement(original, target, path) {\n  if (!isNumber(original)) {\n    raiseMathOpError('--', original);\n  }\n  deepSet(target, path, original -1);\n}\n\nlet operations = {\n  delete(original, target, path, operand) {deepUnset(original, target, path);},\n  set(original, target, path, operand) {deepSet(target, path, operand);},\n  add,\n  subtract,\n  multiply,\n  divide,\n  mod,\n  pow,\n  increment,\n  decrement,\n  '+': add,\n  '-': subtract,\n  '*': multiply,\n  '/': divide,\n  '%': mod,\n  '**': pow,\n  '++': increment,\n  '--': decrement,\n  push(original, target, path, operand) {arrayOp(original, target, 'push', operand)},\n  pop(original, target, path, operand) {arrayOp(original, target, 'pop', operand)},\n  shift(original, target, path, operand) {arrayOp(original, target, 'shift', operand)},\n  unshift(original, target, path, operand) {arrayOp(original, target, 'unshift', operand)},\n  splice(original, target, path, operand) {\n    if(!Array.isArray(original)) {\n      raiseArrayOpError('splice', original);\n    }\n    original.splice(...operand);\n  },\n  insert(original, target, path, operand) {\n    if (!Array.isArray(original)) {\n      raiseArrayOpError('insert', original);\n    }\n    original.splice(operand.index, 0, operand.value);\n  },\n  removeAt(original, target, path, operand) {\n    if (!Array.isArray(original)) {\n      raiseArrayOpError('removeAt', original);\n    }\n    original.splice(operand.index, 1);\n  },\n  extend(original, target, path, operand) {\n    if (!Array.isArray(original)) {\n      raiseArrayOpError('extend', original);\n    }\n    original.splice(original.length, 0, ...operand);\n  },\n  fn(original, target, path, operand) {\n    deepSet(target, path, operand(original));\n  }\n};\n\nexports.default = function ({path, operation, operand}, target) {\n  let original = deepGet(target, path);\n  if(operations[operation]) {\n    operations[operation](original, target, path, operand)\n  }\n  else {\n    throw Error(`Unrecognized operation ${operation}`);\n  }\n};"]}